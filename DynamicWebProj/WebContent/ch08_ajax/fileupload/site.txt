http://adrenal.tistory.com/16



//자바스크립트 엔진 표준 스팩에 동일 출처 정책(same-origin policy)이라는 보안 규칙이 있기 때문
//웹 개발시 자바스크립트로 외부 서버의 경로로 ajax요청을 날리면 에러가 나면서 요청이 실패한다.
//자바스크립트(XMLHttpRequest)로 다른 웹페이지에 접근할때는 
//같은 출처(same origin)의 페이지에만 접근이 가능하다. 
//같은 출처라는 것은 프로토콜, 호스트명, 포트가 같다는 것을 의미한다. 
//웹페이지의 스크립트는 그 페이지와 같은 서버에 있는 주소로만 ajax 요청을 할 수 있다는 것이다. 
//그래서 만들어진 추가 정책이 CORS(Cross-Origin Resource Sharing) 이다. 
//이 정책의 특징은 서버에서 외부 요청을 허용할 경우 ajax요청이 가능해지는 방식이다. 

//1.웹 브라우저 실행시 외부 요청을 허용하는 옵션을 사용
//크롬의 경우: --disable-web-security 옵션을 추가하여 크롬 실행

//2.외부 요청을 가능하게 해주는 플러그인 설치
//서버에서 받은 요청의 응답에 특정 header(Access-Control-Allow-Origin: *)만 
//추가하면 웹 브라우저가 요청이 가능한 사이트로 인식해서 요청이 가능

//3.JSONP방식으로 요청


//****서버에서 CORS (Cross-Origin Resource Sharing) 요청 핸들링하기
	
	//모든 요청 허용하기 
	//Access-Control-Allow-Origin: 요청을 허용하는 출처. * 이면 모든곳에 공개되어 있음을 의미
    //Access-Control-Expose-Headers: 클라이언트 요청에 포함되어도 되는 사용자 정의 해더

	response.setHeader("Access-Control-Allow-Origin", "*");
	response.setHeader("Access-Control-Allow-Headers", "X-File-Name, Content-Type");
	
	